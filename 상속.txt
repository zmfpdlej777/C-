 6. 상속
 - 클래스끼리 물려주거나 물려 받는것
 - 물려준 클래스(부모,상위..)의 속성(멤변)과 기능(멤함)을 물려받은 클래스(자식,하위..)에서
   사용이 가능하도록 만들고, 추가적인 표현을 통하여 새로운 클래스를 만드는 문법
 - 사고는 자식>부모 순이지만 코드 작성은 부모>자식 순이다.
 - 목적 : 클래스의 재사용, 프로그램의 유연성(기능 추가/수정/삭제) 증대
 - 주의 1) *자식이 부모를 선택=자식이 만들어지기 전에 부모가 만들어져있어야 한다
        2) 아무리 자식이더라도 부모의 private 멤버는 접근 불가
 - 형식 :: class 자식클래스명 : 접근지정자 부모클래스명{코드 구현;}
                              *보통public
 6-1 상속관계에서의 '접근 지정자'
  - 부모클래스의 멤버, 상속 받은 자식에서는 그대로, 그외의 외부와의 관계를 따지는 접근 지정자
  - private < protected < public
  - private   : 보모의 최대 접근 지정자를 private로 설정하여 상속받는 형태 (*default)
  - protected : 부모의 최대 접근 지정자를 protected로 변경하여 상속받는 형태 (*public도 protected화 시킨다)
  - public    : 부모의 접근지정자를 그대로 물려받는 상속. (*가장 많이 쓰이는 형태, public멤버 빼고는 상속X)

 6-2 함수의 오버라이드
  - 자식의 객체에 맞게끔 부모의 함수를 재정의
  - 함수명을 똑같이 하고, 코드부분만 재정의하면 된다.